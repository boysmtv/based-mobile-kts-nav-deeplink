# Specifies the JVM arguments used for the daemon process.
# The setting is particularly useful for tweaking memory settings.
org.gradle.jvmargs=-Xmx8g -XX:+UseParallelGC -XX:MaxMetaspaceSize=1g
# Enable cache mechanism that aims to save time by reusing outputs produced by other builds.
org.gradle.caching=true
# When configured, Gradle will run in incubating parallel mode.
# This option should only be used with decoupled projects. More details, visit
# http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects
org.gradle.parallel=true
# Configuration on demand mode attempts to configure only projects that are relevant
# for requested tasks.
#org.gradle.configureondemand=true
# AndroidX package structure to make it clearer which packages are bundled with the
# Android operating system, and which are packaged with your app's APK
# https://developer.android.com/topic/libraries/support-library/androidx-rn
android.useAndroidX=true
# Automatically convert third-party libraries to use AndroidX
android.enableJetifier=true
# Kotlin code style for this project: "official" or "obsolete".
kotlin.code.style=official
# All annotation processors need to opt in to this feature,
# otherwise they will trigger a full recompilation.
# Incremental annotation processing will be deactivated if a custom executable or
# javaHome is configured on the compile task.
#android.databinding.incremental=true
# Enable this if includeAndroidResources is set to true.
# This will generate the test config using relative paths, which allows
# the AndroidUnitTest task to be fully cacheable.
# android.testConfig.useRelativePath = true
# This will let Gradle run independent annotation processing tasks from a single project in parallel,
# which in some cases significantly decreases the execution time.
# Please be adviced that running kapt with Gradle worker API enabled can result in
# increased memory consumption due to parallel execution.
#kapt.use.worker.api=true
# If compile avoidance is enabled, Gradle can skip annotation processing when rebuilding a project.
# Along with annotation processor dependencies being set like below:
# plugins {
#   kotlin("kapt")
# }
# We could turn off the discovery of annotation processors in the compile classpath by
# setting below configuration into false to run kapt with compile avoidance.
kapt.include.compile.classpath=false
-Xopt-in=kotlin.RequiresOptIn
#org.gradle.unsafe.configuration-cache=true
## Use this flag sparingly, in case some of the plugins are not fully compatible
#org.gradle.unsafe.configuration-cache-problems=warn